// Example:
// https://raw.githubusercontent.com/google/flatbuffers/master/samples/monster.fbs

namespace BFGame;

enum Building_Type:byte {
    Undefined = 0,
    City_Hall,
    Harvest,
    Plant,
    Fish,
    Produce,
}

table Resource {
    code:             string (key);
    texture_id:       uint;
    small_texture_id: uint;
}

table Construction_Resource_Pair {
    resource_code: string (required);
    count: int;
}

table Building {
    code:       string         (key);
    type:       Building_Type = Undefined;
    texture_id: uint;

    human_spawning_delay: float;
    construction_points:  float;
    can_be_built:         bool;

    construction_resources: [Construction_Resource_Pair];
}

enum Tile_State_Condition:byte {
    Skip     = 0,
    Excluded = 1,
    Included = 2,
}

struct Tile_State {
    texture_id: uint;
    condition:  [Tile_State_Condition:8];
}

table Tile_Rule {
    default_texture_id: uint;
    states:             [Tile_State];
}

table Art {
    human_texture_id:                uint;
    grass_texture_ids:               [uint];
    forest_texture_ids:              [uint];
    building_in_progress_texture_id: uint;
    road_texture_ids:                [uint];
    flag_texture_ids:                [uint];
    ui:                              UI;
    tile_rule_forest:                Tile_Rule (required);
    tile_rule_grass:                 Tile_Rule (required);
}

table UI {
    buildables_panel_texture_id:       uint;
    buildables_placeholder_texture_id: uint;
}

table Humans {
    moving_one_tile_duration: float;
    picking_up_duration:      float;
    placing_duration:         float;
}

table Game_Library {
    humans:    Humans;
    buildings: [Building];
    resources: [Resource];
    art:       Art;
}

file_identifier "GLIB";
root_type Game_Library;
